package towerdefensegame;

import java.util.ArrayList;

import org.lwjgl.input.Mouse;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;
import org.newdawn.slick.tiled.TiledMap;

import towerdefensegame.objects.*;

public class LevelTwo extends BasicGameState {
	private int ID;
	private TiledMap map = null;
	private int x = 0;
	private int y = 0;
	private ArrayList<Tower> towers;
	
	public LevelTwo(int id){
		this.ID = id;
	}
	
	@Override
	public void init(GameContainer container, StateBasedGame arg1)
			throws SlickException {
		map = load();
		
		
	}

	@Override
	public void render(GameContainer container, StateBasedGame arg1, Graphics g)
			throws SlickException {
		map.render(0, 0);
		g.fillRect(x, y, 32, 32); // Current mouse location
		for(Tower t: towers){
			g.drawImage(t.getSprite(), t.getX(), container.getHeight() - t.getY());
		}
		}
	

	@Override
	public void update(GameContainer container, StateBasedGame sbg, int delta)
			throws SlickException {
		Input input = container.getInput();
		int xPos = Mouse.getX();
		int yPos = Mouse.getY();
		
		container.setMouseGrabbed(true);
		x = xPos;
		y = 600-yPos;
		//go back to level select
		if(input.isKeyPressed(input.KEY_ESCAPE)) {
			sbg.enterState(1);
		}
		//spawn different towers
		if(input.isKeyPressed(input.KEY_1)) {
			Tower tower = new Tower("basic", xPos, yPos);
			towers.add(tower);
		}
		/*if(input.isKeyPressed(input.KEY_2)) {
			Tower tower = new Tower("mortar", xPos, yPos);
		}*/
		
		//Towers act
		/*for(Tower tower : towers) {
			tower.act();
		}*/
	}

	@Override
	public int getID() {
		
		return ID;
	}

	private TiledMap load() throws SlickException {
		return new TiledMap("res//Level2.tmx", "res//pictures//tileset.png");
	}
	
}
